


function InfoKruncherInterfaceTableHeader
{
cat <<EOF
|Service|Header Path|Library Path|Library Name|Header Name|Name Space|Development|
EOF
}


## This table is used by infodata/db/CMakeLists.txt to drive the makefiles

function InfoKruncherInterfaceTable
{
cat <<EOF
|traderdata|tradekruncher/db|tradekruncher/db::markets|markets|<markets/RestInterface.h>|TraderFace|development|
|testfactory|testfactory|testfactory::infobuild|libinfo|<RestInterface.h>|InfoBuildFace|development|
|tickerkruncher|tradekruncher/db;tickerkruncher|tradekruncher/db::markets;tickerkruncher::ticker|markets;tickers|<algos/RestInterface.h>|TickerFace|development|
#|webkruncherdata|webkruncher/db::visitors|webkruncher/db::visitors|visitors|<webkruncher/RestInterface.h>|DataFace|development|
EOF
}

[ -z ${1} ] && InfoKruncherInterfaceTable  | sed '/^#/d' && shift


## The rest of this script is used only to display the InfoKruncherInterfaceTable
## in human read-able format.  Only the table itself is needed for building the services.





function PrintInfoKruncherInterfaceUsageLegend
{
cat <<EOF
|Column|DB Service Cmake Variable Name|Description|
EOF
}

function PrintInfoKruncherInterfaceUsage
{
cat <<EOF
\033[1m\033[7mInformation Krunchers\033[0m
\n
This table drives the Information Kruncher InfoData services.
Each entry represents a database service, and the information necessary to build the service.
Each service name must be unique.
\n
Header Path, Library Path and Library Name fields may be semi-colon dilimeted lists;
Header Name and Name Space must be exactly one per service.
\n
See infodata/src/db/CMakeLists.txt for more information.
\n\n
\033[1m\033[3m\033[4mLegend\033[0m
\n
\033[7m`PrintInfoKruncherInterfaceUsageLegend| awk 'BEGIN { FS = "|" } ; {printf "|%-15s|%-39s|%-80s\n", \$2,\$3,\$4,\$5} '`\033[0m
Service\t\tKrunchDataServers\t\t\tThis is the name of the database service created by the \033[4mDB Service CMake\033[0m *
Header Path\tDataHeaders\t\t\t\tInclude file path
Library Path\tDataLibPath\t\t\t\tThe path to the link library
Library Name\tDataLibs\t\t\t\tLink Library
Header Name\tRestInterface\t\t\t\tInterface header relative pathname **
Name Space\tKruncherSpace\t\t\t\tNamespace for objects in RestInterface **


\033[1m\033[3m\033[4mSupplemental Fields\033[0m
Development\t\t\t\t\t\tTag to trigger active develompent script(s) (kruncher)

\n\n
*\t\033[4mDB Service CMake\033[0m\t\t\tinfodata/db/CMakeLists.txt.
**\tPre-compiler definition\t\t\tUsed in infodata/db/infoservice.cpp.  One per service.
\n\n


EOF
}


function PrintInfoKruncherInterfaceTableAwk
{
cat <<EOF
BEGIN { FS = "|" } ; {printf "|%-15s|%-25s|%-35s|%-15s|%-30s|%-20s|%-10s|\n", \$2,\$3,\$4,\$5,\$6,\$7,\$8}
EOF
}


function InfoKruncherInterfaceRows
{
	awkward=`PrintInfoKruncherInterfaceTableAwk`
	while read line; do
		nfields=`echo "${line}" | tr -cd '|' | wc -c`
		col=1
		lc=1
		while [ 1 ]; do
			outline="|"
			for ((i=2;i<=${nfields};i++)); do
				field=`echo "${line}" | cut -d '|' -f ${i}`
				if [ `echo "${field}" | tr -cd ';' | wc -c | tr -d ' '` -lt 1 ]; then
					if [ "${lc}" == 1 ]; then
						outline="${outline}${field}|"
					else
						outline="${outline}|"
					fi
				else
					subfield=`echo "${field}" | cut -d ';' -f ${col}`
					outline="${outline}${subfield}|"
				fi
			done;
			more=`echo "${outline}" | sed 's/\|//g' | wc -c | tr -d ' '`
			[ "${more}" == "1" ] && break;
			echo "${outline}" | awk "${awkward}"
			(( col++ ))
			(( lc++ ))
		done
	done
}



function PrintInfoKruncherInterfaceTable
{
	awkward=`PrintInfoKruncherInterfaceTableAwk`
	echo -ne "\033[7m`InfoKruncherInterfaceTableHeader  |  awk "${awkward}"`\033[0m\n"

	for service in `InfoKruncherInterfaceTable | sed '/^#/d' | cut -d '|' -f2 | sort | uniq`; do
		echo "|${service}"
		InfoKruncherInterfaceTable | grep -e "^|${service}|" | awk 'BEGIN {FS="|";OFS="|"}; { $2=""; print $0; }' | awk "${awkward}" | InfoKruncherInterfaceRows
	done
	#InfoKruncherInterfaceTable | sed '/^#/d' |  awk "${awkward}"
}


while [ ! -z ${1} ]; do
	[ "${1}" == "-h" ] && echo -ne "`PrintInfoKruncherInterfaceUsage`" && shift
	[ "${1}" == "-d" ] && PrintInfoKruncherInterfaceTable && shift 
done




