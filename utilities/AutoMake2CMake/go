

PROJECTNAME=libdb

#./bdb/KludgeBdb.ksh ~/${PROJECTNAME}
#manifest=`./CreateManifest.ksh ~/${PROJECTNAME} | grep "MANIFEST:" | cut -d ':' -f2`
#echo -ne "\033[32mManifest: ${manifest}\033[0m\n"
#./GetRecipe.ksh ~/${PROJECTNAME} ${manifest}  | grep libtool > recipe.txt

[ -d ../src.build ] && rm -rf ../src.build
mkdir -p ../src.build
cmake  -S . -B ../src.build/  
cmake  --build ../src.build/ 


cat Templates/Root.txt | sed "s/PROJECTNAME/${PROJECTNAME}/g" > ~/${PROJECTNAME}/CMakeLists.txt 

for directory in `cat recipe.txt | grep "mode=compile" | ../src.build/src/CreateCmakeMacros ~/${PROJECTNAME} -compile`; do
	echo "add_subdirectory( ${directory} )" >> ~/${PROJECTNAME}/CMakeLists.txt

	LIBRARYNAME=`basename ${directory}`

	cat Templates/Sub.txt | \
		sed "s/LIBRARYNAME/${LIBRARYNAME}/g" | \
		sed "s/PROJECTNAME/${PROJECTNAME}/g" > ~/${PROJECTNAME}/${directory}/CMakeLists.txt	
done


for directory in `cat recipe.txt | grep "link: ar" | ../src.build/src/CreateCmakeMacros ~/${PROJECTNAME} -link`; do
	echo -ne "Link rules for ${directory}\n"
done;


pushd ~/${PROJECTNAME}

[ -d src.build ] && rm -rf src.build 
mkdir src.build
#cmake -S .  -D CMAKE_C_COMPILER=gcc -D CMAKE_CXX_COMPILER=g++  -B src.build/
#cmake -S .  -D CMAKE_C_COMPILER=gcc -D CMAKE_CXX_COMPILER=g++  -B src.build/
#cmake  --build src.build/ 
#sudo cmake  --install src.build/ 


cmake -S .  -B  ./src.build
[ $? != 0 ] && exit -1
cmake  --build ./src.build/ 
[ $? != 0 ] && exit -1

ar cru libdb_cxx.a  `find . -name "*.o" | xargs `
[ $? != 0 ] && exit -1
sudo cp libdb_cxx.a /usr/lib


popd

