

PROJECTNAME=libdb

#./bdb/KludgeBdb.ksh ~/${PROJECTNAME}
#manifest=`./CreateManifest.ksh ~/${PROJECTNAME} | grep "MANIFEST:" | cut -d ':' -f2`
#echo -ne "\033[32mManifest: ${manifest}\033[0m\n"
#./GetRecipe.ksh ~/${PROJECTNAME} ${manifest}  | grep libtool > recipe.txt

[ -d ../src.build ] && rm -rf ../src.build
mkdir -p ../src.build
cmake  -S . -B ../src.build/  
cmake  --build ../src.build/ 


cat Templates/Root.txt | sed "s/PROJECTNAME/${PROJECTNAME}/g" > ~/${PROJECTNAME}/CMakeLists.txt 
cat Templates/go.${PROJECTNAME}  > ~/${PROJECTNAME}/go
chmod u+x ~/${PROJECTNAME}/go

for directory in `cat recipe.txt | grep "mode=compile" | ../src.build/src/CreateCmakeMacros ~/${PROJECTNAME} -compile | grep 'lang\/cxx' `; do
	echo "add_subdirectory( ${directory} )" >> ~/${PROJECTNAME}/CMakeLists.txt

	LIBRARYNAME=`basename ${directory}`

	cat Templates/Sub.txt | \
		sed "s/LIBRARYNAME/${LIBRARYNAME}/g" | \
		sed "s/PROJECTNAME/${PROJECTNAME}/g" > ~/${PROJECTNAME}/${directory}/CMakeLists.txt	
done


#set(CMAKE_CXX_FLAGS "-std=c++11 -pthread ")





pushd ~/${PROJECTNAME}


./go $@
[ $? != 0 ] && exit -1
exit 0


popd

